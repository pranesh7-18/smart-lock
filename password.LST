C51 COMPILER V9.50a   PASSWORD                                                             09/17/2024 19:14:34 PAGE 1   


C51 COMPILER V9.50a, COMPILATION OF MODULE PASSWORD
OBJECT MODULE PLACED IN password.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE password.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include<reg51.h>
   2          
   3          //lcd display pins 
   4          #define lcd P0 //port 0-data pins
   5          sbit rs=P2^0;
   6          sbit en=P2^1;
   7          
   8          //keypad pins
   9          sbit r1=P1^6;
  10          sbit r2=P1^5;
  11          sbit r3=P1^4;
  12          sbit r4=P1^3;
  13          sbit c3=P1^2;
  14          sbit c2=P1^1;
  15          sbit c1=P1^0;
  16          
  17          
  18          void keypad(void);
  19          void lcd_init(void);
  20          void lcd_cmd(unsigned char);
  21          void lcd_data(unsigned char);
  22          void lcd_string(unsigned char*);
  23          void lcd_delay(void);
  24          void delay(unsigned int);
  25          void wait_ms(void);
  26          
  27          const unsigned char password[]="7018"; 
  28          unsigned char pass[]="****";
  29          int index=0;
  30          
  31          void main(void)
  32          {
  33   1        lcd_init();
  34   1        
  35   1        EA=1;
  36   1        EX0=1;
  37   1        IT0=1;
  38   1          
  39   1        while(1)
  40   1        {
  41   2          lcd_cmd(0x80);
  42   2          lcd_string("Enter password:");
  43   2          lcd_cmd(0xc7);
  44   2          keypad();
  45   2        }
  46   1      }
  47          
  48          void keypad(void)
  49          {
  50   1        c1=c2=c3=1;
  51   1        r2=r3=r4=1;
  52   1        r1=0;
  53   1        if(c1==0)
  54   1        {
  55   2          while(c1==0);
C51 COMPILER V9.50a   PASSWORD                                                             09/17/2024 19:14:34 PAGE 2   

  56   2          lcd_data('1');
  57   2          if(index<4)
  58   2            pass[index]='1';
  59   2          index++;
  60   2        }
  61   1        else if(c2==0)
  62   1        {
  63   2          while(c2==0);
  64   2          lcd_data('2');
  65   2          if(index<4)
  66   2            pass[index]='2';
  67   2          index++;
  68   2        }
  69   1        else if(c3==0)
  70   1        {
  71   2          while(c3==0);
  72   2          lcd_data('3');
  73   2          if(index<4)
  74   2            pass[index]='3';
  75   2          index++;
  76   2        }
  77   1        
  78   1        //row 2
  79   1        r1=1,r2=0;
  80   1        if(c1==0)
  81   1        {
  82   2          while(c1==0);
  83   2          lcd_data('4');
  84   2          if(index<4)
  85   2            pass[index]='4';
  86   2          index++;
  87   2        }
  88   1        else if(c2==0)
  89   1        {
  90   2          while(c2==0);
  91   2          lcd_data('5');
  92   2          if(index<4)
  93   2            pass[index]='5';
  94   2          index++;
  95   2        }
  96   1        else if(c3==0)
  97   1        {
  98   2          while(c3==0);
  99   2          lcd_data('6');
 100   2          if(index<4)
 101   2            pass[index]='6';
 102   2          index++;
 103   2        }
 104   1        
 105   1        //row 3
 106   1        r2=1,r3=0;
 107   1        if(c1==0)
 108   1        {
 109   2          while(c1==0);
 110   2          lcd_data('7');
 111   2          if(index<4)
 112   2            pass[index]='7';
 113   2          index++;
 114   2        }
 115   1        else if(c2==0)
 116   1        {
 117   2          while(c2==0);
C51 COMPILER V9.50a   PASSWORD                                                             09/17/2024 19:14:34 PAGE 3   

 118   2          lcd_data('8');
 119   2          if(index<4)
 120   2            pass[index]='8';
 121   2          index++;
 122   2        }
 123   1        else if(c3==0)
 124   1        {
 125   2          while(c3==0);
 126   2          lcd_data('9');
 127   2          if(index<4)
 128   2            pass[index]='9';
 129   2          index++;
 130   2        }
 131   1        
 132   1        //row 4
 133   1        r3=1,r4=0;
 134   1        if(c1==0)
 135   1        {
 136   2          while(c1==0);
 137   2          lcd_data('*');
 138   2          if(index<4)
 139   2            pass[index]='*';
 140   2          index++;
 141   2        }
 142   1        else if(c2==0)
 143   1        {
 144   2          while(c2==0);
 145   2          lcd_data('0');
 146   2          if(index<4)
 147   2            pass[index]='0';
 148   2          index++;
 149   2        }
 150   1        else if(c3==0)
 151   1        {
 152   2          while(c3==0);
 153   2          lcd_data('#');
 154   2          if(index<4)
 155   2            pass[index]='#';
 156   2          index++;
 157   2        }
 158   1      }
 159          
 160          void lcd_init(void)
 161          {
 162   1        lcd_cmd(0x38);
 163   1        lcd_cmd(0x0c);
 164   1        lcd_cmd(0x06);
 165   1        lcd_cmd(0x01);
 166   1      }
 167          
 168          void lcd_cmd(unsigned char ch)
 169          {
 170   1        lcd=ch;
 171   1        rs=0;
 172   1        en=1;
 173   1        lcd_delay();
 174   1        en=0;
 175   1      }
 176          
 177          void lcd_data(unsigned char ch)
 178          {
 179   1        lcd=ch;
C51 COMPILER V9.50a   PASSWORD                                                             09/17/2024 19:14:34 PAGE 4   

 180   1        rs=1;
 181   1        en=1;
 182   1        lcd_delay();
 183   1        en=0;
 184   1      }
 185          
 186          void lcd_string(unsigned char *ch)
 187          {
 188   1        while(*ch)
 189   1          lcd_data(*ch++);
 190   1      }
 191          
 192          void lcd_delay(void)
 193          {
 194   1        unsigned int i;
 195   1        for(i=0;i<1000;i++);
 196   1      }
 197          
 198          void delay(unsigned int n)
 199          {
 200   1        unsigned int i=0;
 201   1        for(i=0;i<n;i++)
 202   1        wait_ms();
 203   1      }
 204          
 205          void wait_ms(void)
 206          {
 207   1        TMOD=0x01;//timer 0 mode 1
 208   1        
 209   1        TH0=0xFC;
 210   1        TH1=0x66;
 211   1        
 212   1        TR0=1;//start timer 0
 213   1        while(TF0==0);
 214   1        TR0=0;
 215   1        TF0=0;
 216   1      }
 217          
 218          void External0_ISR(void) interrupt 0
 219          {
 220   1        unsigned char *p,*u;
 221   1        int i;
 222   1        p=password;
 223   1        u=pass;
 224   1        if(index!=4)
 225   1        {
 226   2          lcd_cmd(0x80);
 227   2          lcd_string("Access Denied..");
 228   2          lcd_cmd(0xc0);
 229   2          lcd_string("Wait for ");
 230   2          for(i=5;i>=0;i--)
 231   2          {
 232   3            lcd_cmd(0xc9);
 233   3            lcd_data(i+'0');
 234   3            lcd_string(" sec..");
 235   3            delay(990);
 236   3          }
 237   2          for(i=0;i<4;i++)
 238   2          pass[i]='*';
 239   2          index=0;
 240   2          lcd_cmd(0x01);
 241   2          return;
C51 COMPILER V9.50a   PASSWORD                                                             09/17/2024 19:14:34 PAGE 5   

 242   2        }
 243   1          
 244   1        while(*p && *u )
 245   1        {
 246   2          if(*p!=*u)
 247   2          {
 248   3            lcd_cmd(0x80);
 249   3            lcd_string("Access Denied..");
 250   3            lcd_cmd(0xc0);
 251   3            lcd_string("Wait for ");
 252   3            for(i=5;i>=0;i--)
 253   3            {
 254   4              lcd_cmd(0xc9);
 255   4              lcd_data(i+'0');
 256   4              lcd_string(" sec..");
 257   4              delay(950);
 258   4            }
 259   3            for(i=0;i<4;i++)
 260   3            pass[i]='*';
 261   3            index=0;
 262   3            lcd_cmd(0x01);
 263   3            return;
 264   3          }
 265   2          p++;
 266   2          u++;
 267   2        }
 268   1        lcd_cmd(0x80);
 269   1        lcd_string("Access Granted...");
 270   1        lcd_cmd(0xc0);
 271   1        lcd_string("Locks in ");
 272   1        for(i=5;i>=0;i--)
 273   1        {
 274   2          lcd_cmd(0xc9);
 275   2          lcd_data(i+'0');
 276   2          lcd_string(" sec..");
 277   2          delay(950);
 278   2        }
 279   1        for(i=0;i<4;i++)
 280   1        pass[i]='*';
 281   1        index=0;
 282   1        lcd_cmd(0x01);
 283   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1151    ----
   CONSTANT SIZE    =     77    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
